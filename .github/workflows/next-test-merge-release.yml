name: CI/CD for Flask App

on:
  push:
    branches: [ "stage" ]
    tags:
      - 'v*'

permissions:
  contents: read

jobs:

# ------- START TESTING FLASK APP -------- #

  TestFlask:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Create virtual environment and install dependencies
        run: |
          python -m venv env
          source env/bin/activate
          pip install -r requirements.txt
          pip install pytest
          pip install -e .

      - name: Run Tests with pytest
        env:
          FLASK_ENV: "testing"
          DATABASE_URL: "sqlite:///:memory:"
        run: |
          source env/bin/activate
          PYTHONPATH=$PYTHONPATH:./flask_app pytest tests/

# ------- END TESTING FLASK APP -------- #

# ------- START MERGE PROCESS -------- #

  MergeStageToMain:
    needs: [TestFlask]
    name: Merge Stage with Main
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Merge stage -> main
        uses: devmasx/merge-branch@master
        with:
          type: now
          head_to_merge: ${{ github.ref }}
          target_branch: main
          github_token: ${{ github.token }}

# ------- END MERGE PROCESS -------- #

# ------- START RELEASE PROCESS -------- #

  PostRelease:
    needs: MergeStageToMain
    name: Create Release
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      # Zip Flask App
      - name: Zip artifact for deployment
        run: zip -r releaseFlask.zip ./flask_app/*

      # Upload Artifacts
      - name: Upload Flask artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: FlaskApp
          path: releaseFlask.zip

      # Generate Tagname
      - name: Generate Tagname for release
        id: taggerDryRun
        uses: anothrNick/github-tag-action@1.61.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: stage,main
          BRANCH_HISTORY: last

      # Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ steps.taggerDryRun.outputs.new_tag }}
          release_name: Release ${{ steps.taggerDryRun.outputs.new_tag }}
          body: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false

      # Upload ZIP to GitHub Release
      - name: Upload Release Asset FlaskApp
        id: upload-flask-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./releaseFlask.zip
          asset_name: releaseFlask.zip
          asset_content_type: application/zip

      # Update version in setup.py
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Update version
        run: |
          sed -i "s/version='.*'/version='${{ steps.taggerDryRun.outputs.new_tag }}'/" setup.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update version to ${{ steps.taggerDryRun.outputs.new_tag }}"

# ------- END RELEASE PROCESS -------- #
